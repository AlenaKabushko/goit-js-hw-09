{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAgBF,SAASC,cAAc,kBACvCE,EAAeH,SAASC,cAAc,iBACtCG,EAAiBJ,SAASC,cAAc,mBAM9C,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAOC,QAAU,IAAIC,SAAQ,CAACC,EAASC,KACrCC,YAAW,KACLP,EACFK,EAAQ,C,SAAEP,E,MAAUC,IAEtBO,EAAO,C,SAAER,E,MAAUC,MAEhBA,MAfTS,QAAQC,IAAIlB,GACZiB,QAAQC,IAAIf,GACZc,QAAQC,IAAId,GACZa,QAAQC,IAAIb,GAkDVL,EAAQmB,iBAAiB,UAhC3B,SAAqBC,GACnBA,EAAMC,iBAEN,MACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEV,IAAIC,EAAaC,OAAOL,EAAMM,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElCZ,QAAQC,IAAIS,GACZV,QAAQC,IAAIY,GACZb,QAAQC,IAAIa,GAEZ,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrC1B,EAAc0B,EAAGL,GACdM,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBS,QAAQC,IAAI,uBAAqBX,QAAiBC,OAClDV,EAAAoC,OAAOC,QAAQ,uBAAqB5B,QAAiBC,UAEtD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBS,QAAQC,IAAI,sBAAoBX,QAAiBC,OACjDV,EAAAoC,OAAOG,QAAQ,sBAAoB9B,QAAeC,UAGtDmB,GAAcG,EAGhBV,EAAMM,cAAcY","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst delayInputRef = document.querySelector('[name=\"delay\"]');\nconst stepInputRef = document.querySelector('[name=\"step\"]');\nconst amountInputRef = document.querySelector('[name=\"amount\"]');\nconsole.log(formRef);\nconsole.log(delayInputRef);\nconsole.log(stepInputRef);\nconsole.log(amountInputRef);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n      reject({ position, delay });\n      }\n      }, delay\n    )  \n  }\n  )  \n}\n\nfunction createEvent(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  let delayInput = Number(delay.value);\n  const stepInput = Number(step.value);\n  const amountInput = Number(amount.value);\n  \n  console.log(delayInput)\n  console.log(stepInput)\n  console.log(amountInput)\n\n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInput += stepInput;\n  }\n  \n  event.currentTarget.reset();\n}\n\n  formRef.addEventListener(\"submit\", createEvent)"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$delayInputRef","$47d4ff9957288465$var$stepInputRef","$47d4ff9957288465$var$amountInputRef","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","console","log","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayInput","Number","value","stepInput","amountInput","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.fb5a3d99.js.map"}