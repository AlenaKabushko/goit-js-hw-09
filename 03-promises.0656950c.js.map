{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SACjBD,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBAE9C,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEtBM,EAAO,CAAEP,WAAUC,YAEhBA,MAgCPL,EAAQa,iBAAiB,UA1B3B,SAAqBC,GACnBA,EAAMC,iBAUN,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALX,MAAOe,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAaC,OAAOJ,EAAMK,OACxBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEzBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCxB,EAAcwB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBP,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,UAE9D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBP,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,UAG9DiB,GAAcG,EAGhBX,EAAMG,cAAckB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst delayInputRef = document.querySelector('[name=\"delay\"]');\nconst stepInputRef = document.querySelector('[name=\"step\"]');\nconst amountInputRef = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n      reject({ position, delay });\n      }\n      }, delay\n    ) \n  }\n  )  \n}\n\nfunction createEvent(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  let delayInput = Number(delay.value);\n  const stepInput = Number(step.value);\n  const amountInput = Number(amount.value);\n\n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInput += stepInput;\n  }\n\n  event.currentTarget.reset();\n}\n\n  formRef.addEventListener(\"submit\", createEvent)"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayInput","Number","value","stepInput","amountInput","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.0656950c.js.map"}