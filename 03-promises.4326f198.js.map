{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjBD,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBAE9C,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAOC,QAAU,IAAIC,SAAQ,CAACC,EAASC,KACrCC,YAAW,KACLP,EACFK,EAAQ,C,SAAEP,E,MAAUC,IAEtBO,EAAO,C,SAAER,E,MAAUC,MAEhBA,MAgCPL,EAAQc,iBAAiB,UA1B3B,SAAqBC,GACnBA,EAAMC,iBAEN,MACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEV,IAAIC,EAAaC,OAAOL,EAAMM,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCxB,EAAcwB,EAAGL,GACdM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA+B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,UAEtD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBP,EAAA+B,OAAOG,QAAQ,sBAAoB5B,QAAeC,UAGtDiB,GAAcG,EAGhBV,EAAMM,cAAcY","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst delayInputRef = document.querySelector('[name=\"delay\"]');\nconst stepInputRef = document.querySelector('[name=\"step\"]');\nconst amountInputRef = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n      reject({ position, delay });\n      }\n      }, delay\n    ) \n  }\n  )  \n}\n\nfunction createEvent(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  let delayInput = Number(delay.value);\n  const stepInput = Number(step.value);\n  const amountInput = Number(amount.value);\n\n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInput += stepInput;\n  }\n\n  event.currentTarget.reset();\n}\n\n  formRef.addEventListener(\"submit\", createEvent)"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayInput","Number","value","stepInput","amountInput","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.4326f198.js.map"}